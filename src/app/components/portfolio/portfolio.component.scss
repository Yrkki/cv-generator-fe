$primary-color: #101010;
$outline-color: royalblue;
$dark-outline-color: darken($outline-color, 20%);
$hover-color: rgba(0, 0, 0, .03);
$inactive-outline-color: $hover-color;

// custom color palette
$header-fore-color: grey;
$value-fore-color: $primary-color;
$faded-fore-color: lighten($primary-color, 10%);
$cell-title-color: azure; //lightgreen
$cell-capacity-color: lightblue;
$cell-normal-color: #DDEEFF; //lightblue
$cell-feature-color: mistyrose; //lightpink
$cell-faded-color: #EEEEEE; //lightgrey
$border-color: #DDEEFF;

// original color palette
$header-fore-color: #a5a5a5;
$value-fore-color: black;
$faded-fore-color: $value-fore-color;
$cell-title-color: #eaf1dd;
$cell-capacity-color: #c6d9f1;
$cell-normal-color: #daeef3;
$cell-feature-color: #f2dbdb;
$cell-faded-color: #efefef;
$border-color: #d9d9d9;

// enhanced palette
$value-fore-color: $primary-color;
$faded-fore-color: lighten($primary-color, 50%);
$header-fore-color: darken($header-fore-color, 20%);

// list colors
$list-back-tone: black;
$list-back-color: rgba($list-back-tone, .0);

// age colors
$modern-age-color: $list-back-color;
$renaissance-color: rgba($list-back-tone, .05);
$dark-ages-color: rgba($list-back-tone, .10);

$table-border-color: rgba(white, .50);

@for $i from 1 through 6 {
    h#{$i} {
        color: $outline-color;
        &:hover {
            color: $dark-outline-color;
        }
    }
}

div[class^="col-"], div[class*=" col-"] {
    padding: 5px;
    border: 2px solid $table-border-color;
    color: $primary-color;
}

.row {
    overflow: hidden;
}

.pair-header {
    color: $header-fore-color;
}

.cell-header {
    font-size: 12px;
    color: $header-fore-color;
}

div[class^="col-"].cell-title {
    background-color: $cell-title-color;
}

div[class^="col-"].cell-capacity {
    background-color: $cell-capacity-color;
}

div[class^="col-"].cell-normal {
    background-color: $cell-normal-color;
}

div[class^="col-"].cell-feature {
    background-color: $cell-feature-color;
}

div[class^="col-"].cell-faded {
    background-color: $cell-faded-color;
}

div[class^="col-"].cell-key {
    color: $header-fore-color;
    border-color: transparent;
}

div[class^="col-"].cell-value {
    border-color: transparent;
}

div[class^="col-"].cell-title.faded-fore,
div[class^="col-"].cell-faded.faded-fore,
.cell-header.faded-fore {
    color: $faded-fore-color;
}

.container-fluid.border {
    border: 4px solid $border-color;
}

.disclaimer {
    color: $header-fore-color;
    font-size: 12px;
}

.detail {
    font-size: 12px;
    font-style: italic;
}

@for $i from 1 through 7 {
    .hsl#{$i} {
        color: hsl((($i+3.5))/7*360, 70%, 60%);
        &:hover {
            color: hsl((($i+3.5))/7*360, 70%, 40%);
        }
    }

    .hsl#{$i}b {
        @extend .hsl#{$i};
        font-weight: 900;
        &:hover {
            @extend .hsl#{$i}:hover;
            font-weight: 900;
        }
    }
}

header {
    cursor: pointer;
    &:hover {
        background-color: $hover-color;
        color: $dark-outline-color;
    }
    &.collapsed {
        background-color: $inactive-outline-color;
    }
}

a {
    text-decoration: none;
    padding: 2px 3px 2px 3px;
    color: $outline-color;
    &:hover {
        background-color: $hover-color;
        color: $dark-outline-color;
    }
}

.frequency {
    cursor: pointer;
    &.frequency:hover {
        color: $dark-outline-color !important;
    }
}

.btn-group {
    background-color: transparent;
}

.btn.active, .btn:hover {
    background-color: $hover-color;
    color: $dark-outline-color;
}

td a {
    display: block;
}

.collapsed {
    color: $dark-outline-color;
}

// %right {
//     text-align: right;
// }

@mixin columns($size) {
    column-count: $size; 
    -moz-column-count: $size;
}

@media only screen and (min-width:768px) {
    /* styles for browsers larger than 768px; (24 chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(2);
    }
}

@media only screen and (min-width:960px) {
    /* styles for browsers larger than 960px; (30 chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(3);
    }
}

@media only screen and (min-width:1440px) {
    /* styles for browsers larger than 1440px; (45 chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(3);
    }
}

@media only screen and (min-width:2000px) {
    /* for sumo sized (mac) screens: 2K, QXGA (63+ chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(4);
    }
}

@media only screen and (min-width:2560px) {
    /* for UWHD, WQHD, WQXGA sized screens (80 chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(4);
    }
}

@media only screen and (min-width:3440px) {
    /* for UWQHD, UHD-1 sized screens (107+ chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(5);
    }
}

@media only screen and (min-width:4096px) {
    /* for 4K sized screens and up (128 chunks) */

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(6);
    }
}

@media only screen and (max-device-width:480px) {
    /* styles for mobile browsers smaller than 480px; (iPhone) (15 chunks)*/
}

@media only screen and (device-width:768px) {
    /* default iPad screens (24 chunks)*/
}

/* different techniques for iPad screening */
@media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:portrait) {
    /* For portrait layouts only (15+ chunks)*/
}

@media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:landscape) {
    /* For landscape layouts only (32 chunks)*/

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(3);
    }
}

@media print {
    .collapsed {
        display: none;
    }

    div[class^="col-"].cell-key {
        text-align: right;
    }

    main {
        @include columns(2);
    }

    // .page-break {
    //     page-break-before: always;
    // }

    .tryKeepTogether {
        page-break-inside: avoid;
    }
}

@page {
    margin: 25mm;
}
