{
  "name": "cv-generator-fe",
  "version": "0.7.0",
  "license": "MIT",
  "scripts": {
    "START-PIPELINE": "npm-run-all PIPELINE",

    "// TOOLS": ":",
    "start": "node server.js",
    "ng": "ng",
    "ver": "ng version && echo Node, NPM and NVM version: && node -v && npm -v && nvm v",
    "compodoc": "compodoc -p src/tsconfig.app.json --theme vagrant --hideGenerator --disableSourceCode --disablePrivate --disableTemplateTab --customFavicon \"./src/favicon/android-chrome-512x512.png\" -n \"CV Generator Documentation\"",
    "dev:test-phase:integrate:package:action": "npm-run-all ngsw-config ngsw-copy favicon-copy google-copy manifest-copy doc",
    "ngsw-config": "node_modules/.bin/ngsw-config dist src/ngsw-config.json",
    "ngsw-copy": "cp node_modules/@angular/service-worker/ngsw-worker.js dist/",
    "favicon-copy": "cp src/favicon/* dist/favicon/",
    "google-copy": "cp src/google/*.* dist/",
    "manifest-copy": "cp src/manifest.json dist/",

    "doc-copy": "cp -r documentation dist/documentation/",
    "cov-copy": "cp -r coverage dist/coverage/",

    "cov": "npm-run-all test-once posttest",
    "dev:test-phase:document:package:action": "npm-run-all doc",
    "doc": "npm-run-all compodoc doc-copy",

    "dev:test-phase:test:package:vulnerability:action": "npm-run-all vulnerability-check",
    "vulnerability-check": "snyk test",
    "dev:test-phase:test:package:integration:action": "npm-run-all e2e",
    "e2e": "ng  e2e --no-webdriver-update",
    "dev:test-phase:test:measure:action": "npm-run-all lint",
    "lint": "ng  lint",
    "ops:run:platform:action": "npm-run-all wake-up-the-dynos:*",
    "wake-up-the-dynos:heroku": "curl https://cv-generator-fe.herokuapp.com/Webpage",
    "wake-up-the-dynos:ml": "echo curl cvgenerator.ml",
    "version": "auto-changelog -p && git add CHANGELOG.md",
    "snyk-protect": "snyk protect",
    "prepare": "snyk-protect",

    "dev:test-phase:codecover:package:action": "npm-run-all codecov coveralls",
    "codecov": "codecov",
    "coveralls": "node ./node_modules/coveralls/bin/coveralls.js < ./coverage/lcov.info",

    "build:staging": "ng build --prod --configuration=heroku",

    "build-prod-ngsw": "npm-run-all build",
    "build-prod-ngsw:staging": "npm-run-all build:staging",
    "postbuild": "npm-run-all dev:test-phase:integrate:package:action",
    "postbuild:staging": "npm-run-all postbuild",
    "serve-prod-ngsw": "http-server dist -p 5000",
    "build-n-serve-prod-ngsw": "npm-run-all build-prod-ngsw serve-prod-ngsw",
    "postinstall": "npm-run-all build-prod-ngsw:staging",

    "dev:test-phase:test:package:unit:action": "npm-run-all test-once",
    "test-once": "env singleRun=true ng test --code-coverage",
    "posttest": "npm-run-all cov-copy",

    "pack:staging": "npm-run-all build-prod-ngsw:staging cov ops:deploy:package:dockerize",

    "dev:build-phase:build:package:action": "npm-run-all buildprod",
    "buildprod": "ng build --prod",
    "test": "ng test --code-coverage",

    "ops:deploy:package:dockerize:build:action": "npm-run-all dockerize-build",
    "dockerize-build": "docker image build -t jorich/cv-generator-fe:%npm_package_version% -t jorich/cv-generator-fe .",
    "ops:deploy:package:dockerize:push:action": "npm-run-all dockerize-push",
    "dockerize-push": "docker push jorich/cv-generator-fe:%npm_package_version% && docker push jorich/cv-generator-fe:latest",
    "ops:deploy:package:provision:action": "npm-run-all provision",
    "provision": "cd ../cv-generator-life-terraform && terraform apply",

    "update:packages": "node wipe-dependencies.js && rm -rf node_modules && npm update --save-dev && npm update --save",

    "dev:plan-phase:plan:report:action": "echo Plan: Include a full SD process in CI/CD pipeline",
    "dev:plan-phase:update:report:action": "echo Update: TODO: Update the dependencied to latest",
    "dev:code-phase:code:report:action": "echo TODO: Code: Implement the new features planned",
    "dev:build-phase:install:report:action": "echo Install: TODO: Link to install logs",
    "dev:build-phase:build:report:action": "echo Build: TODO: Link to Build logs",
    "ops:monitor:report:action": "echo Observe: TODO: Lanch the observability dashboard",


    "PIPELINE": "npm-run-all dev:* && npm-run-all ops:*",
    "dev": "npm-run-all dev:*",
    "dev:plan-phase": "npm-run-all dev:plan-phase:*",
    "dev:plan-phase:plan": "npm-run-all dev:plan-phase:plan:*",
    "dev:plan-phase:plan:report": "npm-run-all dev:plan-phase:plan:report:action",
    "dev:plan-phase:update": "npm-run-all dev:plan-phase:update:*",
    "dev:plan-phase:update:report": "npm-run-all dev:plan-phase:update:report:action",
    "dev:code-phase": "npm-run-all dev:code-phase:*",
    "dev:code-phase:code": "npm-run-all dev:code-phase:code:*",
    "dev:code-phase:code:report": "npm-run-all dev:code-phase:code:report:action",
    "dev:build-phase": "npm-run-all dev:build-phase:*",
    "dev:build-phase:install": "npm-run-all dev:build-phase:install:*",
    "dev:build-phase:install:prepare": ":",
    "dev:build-phase:install:package": "npm-run-all dev:build-phase:install:package:*",
    "dev:build-phase:install:package:environment": ":",
    "dev:build-phase:install:package:package": ":",
    "dev:build-phase:install:report": "npm-run-all dev:build-phase:install:report:action",
    "dev:build-phase:build": "npm-run-all dev:build-phase:build:*",
    "dev:build-phase:build:package": "npm-run-all dev:build-phase:build:package:action",
    "dev:build-phase:build:report": "npm-run-all dev:build-phase:build:report:action",
    "dev:test-phase": "npm-run-all dev:test-phase:*",
    "dev:test-phase:test": "npm-run-all dev:test-phase:test:*",
    "dev:test-phase:test:package": "npm-run-all dev:test-phase:test:package:*",
    "dev:test-phase:test:package:vulnerability": "npm-run-all dev:test-phase:test:package:vulnerability:action",
    "dev:test-phase:test:package:unit": "npm-run-all dev:test-phase:test:package:unit:action",
    "dev:test-phase:test:package:integration": "npm-run-all dev:test-phase:test:package:integration:action",
    "dev:test-phase:test:measure": "npm-run-all dev:test-phase:test:measure:action",
    "dev:test-phase:test:report": ":",
    "dev:test-phase:codecover": ":",
    "dev:test-phase:codecover:package": "npm-run-all dev:test-phase:codecover:package:action",
    "dev:test-phase:codecover:report": ":",
    "dev:test-phase:document": "npm-run-all dev:test-phase:document:*",
    "dev:test-phase:document:package": "npm-run-all dev:test-phase:document:package:action",
    "dev:test-phase:document:report": ":",
    "dev:test-phase:integrate": "npm-run-all dev:test-phase:integrate:*",
    "dev:test-phase:integrate:package": "npm-run-all dev:test-phase:integrate:package:action",
    "dev:test-phase:integrate:copy": ":",
    "dev:test-phase:integrate:test": ":",
    "dev:test-phase:integrate:report": ":",
    "ops": "npm-run-all ops:*",
    "ops:release": "npm-run-all ops:release:*",
    "ops:release:package": ":",
    "ops:release:copy": ":",
    "ops:release:report": ":",
    "ops:deploy": "npm-run-all ops:deploy:*",
    "ops:deploy:package": "echo npm-run-all ops:deploy:package:*",
    "ops:deploy:package:dockerize": "npm-run-all ops:deploy:package:dockerize:*",
    "ops:deploy:package:dockerize:build": "npm-run-all ops:deploy:package:dockerize:build:action",
    "ops:deploy:package:dockerize:push": "npm-run-all ops:deploy:package:dockerize:push:action",
    "ops:deploy:package:provision": "npm-run-all ops:deploy:package:provision:action",
    "ops:deploy:package:orchestrate": ":",
    "ops:deploy:report": ":",
    "ops:run": "npm-run-all ops:run:*",
    "ops:run:platform": "npm-run-all ops:run:platform:action",
    "ops:run:package": ":",
    "ops:run:chaos": ":",
    "ops:run:report": ":",
    "ops:monitor": "npm-run-all ops:monitor:*",
    "ops:monitor:platform": ":",
    "ops:monitor:package": "npm-run-all ops:monitor:package:*",
    "ops:monitor:package:trail": "npm-run-all ops:monitor:package:trail:*",
    "ops:monitor:package:trail:health": ":",
    "ops:monitor:package:trail:performance": ":",
    "ops:monitor:package:trail:resilience": ":",
    "ops:monitor:package:trail:security": ":",
    "ops:monitor:package:showcase": ":",
    "ops:monitor:report": "npm-run-all ops:monitor:report:action",
    "do-nothing": ":"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^9.1.9",
    "@angular/cli": "^9.1.7",
    "@angular/common": "^9.1.9",
    "@angular/compiler": "9.1.9",
    "@angular/compiler-cli": "^9.1.9",
    "@angular/core": "^9.1.9",
    "@angular/forms": "^9.1.9",
    "@angular/http": "^7.2.16",
    "@angular/platform-browser": "^9.1.9",
    "@angular/platform-browser-dynamic": "^9.1.9",
    "@angular/platform-server": "^9.1.9",
    "@angular/pwa": "^0.901.7",
    "@angular/router": "^9.1.9",
    "@angular/service-worker": "^9.1.9",
    "@compodoc/compodoc": "^1.1.11",
    "chart.js": "2.9.3",
    "compression": "^1.7.4",
    "core-js": "^3.6.5",
    "express": "^4.17.1",
    "plotly.js": "^1.54.1",
    "rxjs": "^6.5.5",
    "snyk": "^1.336.0",
    "tslint-angular": "^3.0.2",
    "typescript": "3.8.3",
    "zone.js": "^0.10.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.901.7",
    "@angular/language-service": "9.1.9",
    "@types/jasmine": "3.5.10",
    "@types/jasminewd2": "2.0.8",
    "@types/node": "14.0.11",
    "auto-changelog": "^2.0.0",
    "codecov": "^3.7.0",
    "codelyzer": "5.2.2",
    "coveralls": "^3.1.0",
    "enhanced-resolve": "^4.1.1",
    "jasmine-core": "3.5.0",
    "jasmine-spec-reporter": "^5.0.2",
    "karma": "5.0.9",
    "karma-chrome-launcher": "^3.1.0",
    "karma-coverage-istanbul-reporter": "3.0.3",
    "karma-htmlfile-reporter": "^0.3.8",
    "karma-jasmine": "^3.3.1",
    "karma-jasmine-html-reporter": "1.5.4",
    "node-sass": "^4.14.1",
    "npm-run-all": "^4.1.5",
    "protractor": "7.0.0",
    "ts-node": "8.10.2",
    "tslint": "^6.1.2"
  },
  "engines": {
    "node": "14.3.0",
    "npm": "6.14.5"
  },
  "snyk": true
}
