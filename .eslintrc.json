{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/component-max-inline-declarations": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-attribute-decorator": "error",
        "@angular-eslint/no-forward-ref": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@angular-eslint/use-pipe-decorator": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "Object": {
                "message": "Use {} instead."
              },
              "Boolean": {
                "message": "Use boolean instead."
              },
              "Number": {
                "message": "Use number instead."
              },
              "String": {
                "message": "Use string instead."
              },
              "Symbol": {
                "message": "Use symbol instead."
              }
            }
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "variable",
            "format": [
              "camelCase"
            ]
          }
        ],
        "@typescript-eslint/no-shadow": [
          "error"
        ],
        "@typescript-eslint/no-var-requires": "error",
        "arrow-parens": "off",
        "brace-style": [
          "warn",
          "1tbs",
          {
            "allowSingleLine": true
          }
        ],
        "complexity": [
          "error",
          {
            "max": 13
          }
        ],
        "jsdoc/newline-after-description": [
          "off",
          "never"
        ],
        "max-classes-per-file": [
          "error",
          1
        ],
        "max-lines": [
          "error",
          800
        ],
        "no-console": "off",
        "no-fallthrough": "warn",
        "no-global-assign": "error",
        "no-invalid-this": "off",
        "no-multiple-empty-lines": "error",
        "no-redeclare": "error",
        "no-shadow": "off",
        "no-underscore-dangle": "warn",
        "no-undef": "error",
        "no-undefined": "off",
        "padded-blocks": [
          "off",
          "never",
          {
            "allowSingleLineBlocks": true
          }
        ],
        "prefer-arrow/prefer-arrow-functions": "off",
        "prefer-const": "off",
        "quote-props": [
          "off",
          "as-needed"
        ],
        "semi": [
          "warn",
          "always"
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/cyclomatic-complexity": [
          "error",
          {
            "maxComplexity": 12
          }
        ],
        "@angular-eslint/template/no-autofocus": "error",
        "@angular-eslint/template/no-positive-tabindex": "error"
        // ,
        // "contextual-decorator": true,
        // "no-unused-css": true,
        // "prefer-inline-decorator": true,
        // "template-accessibility-alt-text": true,
        // "template-accessibility-elements-content": true,
        // "template-accessibility-label-for": true,
        // "template-accessibility-table-scope": true,
        // "template-accessibility-valid-aria": true,
        // "template-click-events-have-key-events": true,
        // "template-conditional-complexity": [
        //   true,
        //   4
        // ],
        // "template-mouse-events-have-key-events": true,
        // "template-no-distracting-elements": true,
        // "template-use-track-by-function": true,
      }
    },
    {
      "files": [
        "*.js"
      ],
      "parserOptions": {
        "ecmaVersion": 2017
      },
      "env": {
        "es6": true
      }
    }
  ],
  "globals": {
    "globalThis": "readonly",
    "describe": "readonly",
    "beforeEach": "readonly",
    "it": "readonly",
    "expect": "readonly",
    "afterEach": "readonly"
  }
}