@use "./color.scss" as color;
@use "./geometry.scss" as geometry;
$button-width: geometry.$button-height;

.switch {
  position: relative;
  display: inline-block;
  width: ($button-width + geometry.$margin) * 2;
  height: geometry.$button-height + geometry.$margin * 2;
}

.switch input {
  display: none;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: color.$off-color;
  @include geometry.transition();
}

.slider::before {
  position: absolute;
  content: "";
  width: $button-width;
  height: geometry.$button-height;
  left: geometry.$margin;
  bottom: geometry.$margin;
  background-color: color.$highlight-color;
  @include geometry.transition();
}

input:checked + .slider {
  background-color: color.$on-color;
}

input:focus + .slider {
  box-shadow: 0 0 1px color.$on-color;
}

@each $color, $on-color-color in color.$on-colors {
  .slider-#{$color} {
    @extend .slider;
  }
  input:checked + .slider-#{$color} {
    background-color: $on-color-color;
  }
  input:focus + .slider-#{$color} {
    box-shadow: 0 0 1px $on-color-color;
  }
}

input:checked + .slider::before {
  $delta: $button-width - geometry.$margin;
  -webkit-transform: translateX($delta);
  -ms-transform: translateX($delta);
  transform: translateX($delta);
}

.slider.round {
  @include geometry.border-radius(geometry.$button-height + geometry.$margin * 2);
}

.slider.round::before {
  @include geometry.border-radius(50%);
}
